/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.92
 * Generated at: 2023-10-04 03:19:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Resultado_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Resultado da Calculadora</title>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Space+Mono:wght@400;700&display=swap\"\r\n");
      out.write("        rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resultadostyle.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<img class=\"img\" src=\"logo.png\">\r\n");
      out.write("		<nav>\r\n");
      out.write("			<ul class=\"menu\">\r\n");
      out.write("				<li><a href=\"home.html\">Home</a></li>\r\n");
      out.write("				<li>  |  </li>\r\n");
      out.write("				<li><a href=\"decimalParaBinario.html\">Decimal para Binario, Hexadecimal e Octa</a></li>\r\n");
      out.write("				<li>  |  </li> \r\n");
      out.write("				<li><a href=\"imc.html\">IMC</a></li>\r\n");
      out.write("				<li>  |  </li>\r\n");
      out.write("				<li><a href=\"calculadora.html\">Calculadora</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</nav>\r\n");
      out.write("			<ul class=\"conta\">\r\n");
      out.write("            <li><a href=\"login.html\" style=\"color: white;\">Login</a></li>\r\n");
      out.write("			<li><a href=\"cadastro.html\" style=\"color: white;\">Criar Conta</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"caixa\" style=\"height: 320px;\r\n");
      out.write("	width: 340px;\r\n");
      out.write("	background-color: hsl(183, 100%, 15%);\r\n");
      out.write("	margin: 20px auto;\r\n");
      out.write("	border-radius: 30px; color: white; padding:30px\">\r\n");
      out.write("	\r\n");
      out.write("	    ");

    String svalorA = request.getParameter ("ValorA");
    String svalorB = request.getParameter ("ValorB");
    String sopcao = request.getParameter ("opcao");
    
    double dvalorA = Double.parseDouble(svalorA);
    double dvalorB = Double.parseDouble(svalorB);
    double resultado = 0;

        if (sopcao.equals("+")){
            resultado = dvalorA + dvalorB;
        }else if(sopcao.equals("-")){
            resultado = dvalorA - dvalorB ;
        }else if(sopcao.equals("*")){
            resultado = dvalorA * dvalorB ;
        }else if(sopcao.equals("/")){
            resultado = dvalorA / dvalorB ;
        
        }
        
        
    out.print ("Valor A informado foi: <br>"+ dvalorA +"<br>");
    out.print ("Valor B informado foi: <br>"+ dvalorB +"<br>");



    out.print ("Resultado: <br>"+resultado);


      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("	</main>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<footer>\r\n");
      out.write("		<ul class=\"contatos\">\r\n");
      out.write("			<li>Email</li>\r\n");
      out.write("			<li>Telefone</li>\r\n");
      out.write("			<li>Instagram</li>\r\n");
      out.write("			<li>Twitter</li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		\r\n");
      out.write("	</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
